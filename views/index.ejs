
<% let checkUser=2; if(String(typeof user) !== "undefined" && String(typeof user.user) !== "undefined") {checkUser=1 }else{ checkUser=2 } %>
<% let checkAdmin=0; if(String(typeof user) !== "undefined" && String(typeof user.user) !== "undefined") { checkAdmin=user.user.admin } %>
<script src="config/dual-slider.js" defer></script> <!-- slide filter for price range -->
<%- include ('./partials/popup') %><!-- add/save mark window -->
<%- include ('./partials/popup2') %><!-- book accommodation window -->
<%- include ('./partials/popupAddImage') %><!-- add accommodation pics window -->
<%- include ('./partials/payment_modal') %><!-- add accommodation pics window -->
<%- include('./partials/header') %><!-- navbar -->


<div id="godDivChild" style="display: flex;flex-direction: column;">
    <div id="map" class="rounded windowActive"
        style="position:absolute;height:90vh; width: 100vw;bottom:0%;left:0%;display: none;">
    </div>
    <div id="search" class="rounded windowActive"
        style="position:absolute;height:90vh;bottom:0%;left:0%;display: none;z-index: 999;transition: all 1s cubic-bezier(0.05, -0.42, 0, 1.06) 0s;">
        <%- include('./partials/filteredResults') %>
    </div>
</div>

<input hidden type="text" name="start" class="input" id="start" placeholder="Choose starting point" style="display: none;" />
<input hidden type="text" name="end" class="input" id="destination" placeholder="Choose starting point" style="display: none;" />

<script defer>

    /*===================================================
                    MAP INIT               
    ===================================================*/
    var map = new L.map('map', null, { zoomControl: false });
    map.removeControl(map.zoomControl);

    function addWP1(param1, param2) { // waypoint1
        document.getElementById('start').value = [param1, param2]
        var imgz = document.getElementsByTagName('img')
        for (i = 0; i < document.getElementsByTagName('img').length; i++) {
            if (imgz[i].alt == "fromHere") { imgz[i].remove() }
        }
        var fromHere = L.marker([param1, param2], { icon: startIcon, alt: "fromHere" }).addTo(map).bindPopup("from location").openPopup();

    }

    function addWP2(param1, param2) {// waypoint2
        document.getElementById('destination').value = [param1, param2]
        var imgz = document.getElementsByTagName('img')
        for (i = 0; i < document.getElementsByTagName('img').length; i++) {
            if (imgz[i].alt == "toHere") { imgz[i].remove() }
        }
        var toHere = L.marker([param1, param2]).addTo(map).bindPopup("to location").openPopup();
        initializeMap()
    }
    function resolveAfterMSeconds(time) { // delayer
        return new Promise(resolve => {
            setTimeout(() => {
                resolve('resolved');
            }, time);
        });
    }


    async function initializeMap() {
        map.remove()
        await resolveAfterMSeconds(100)
        console.log("loading...");
        map = L.map('map', null, { zoomControl: false }).setView([53.78839048924211, -4.526367187500001], 6);
        map.removeControl(map.zoomControl);


        /*===================================================
                    OSM TILE LAYER             
        ===================================================*/
        var osm = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
        });
        osm.addTo(map);

        /*===================================================
                        ICONS               
        ===================================================*/
        var baseIcon = L.Icon.extend({
            options: {
                iconUrl: "./img/icon1.png", iconSize: [35, 35], iconAnchor: [5, 5], popupAnchor: [5, -5]
            }
        })

        var iconparking = new baseIcon({ iconUrl: "./img/parking.png" })
        var iconhotel = new baseIcon({ iconUrl: "./img/hotel.png" })
        var iconpub = new baseIcon({ iconUrl: "./img/hotel.png" })
        var iconcampsite = new baseIcon({ iconUrl: "./img/pub.png" })
        var iconBandB = new baseIcon({ iconUrl: "./img/bnb.png" })

        
        /*===================================================
                        BUILDING MARKS              
        ===================================================*/
        // looping through the points from the database to dynamically add the points 
        // each time the map is called

        let markers = [];

        const ajaxRequest = await fetch(`api/acc`);
        const ajaxResponse = await ajaxRequest.json();
        await markers.push(ajaxResponse)
        for (let i = 0; i < ajaxResponse.length; i++) {
            new L.marker([ajaxResponse[i].latitude, ajaxResponse[i].longitude], { icon: new baseIcon({ iconUrl: `./img/${String(ajaxResponse[i].icon).replace('icon', '')}.png` }), alt: `marker${i}`, description: ajaxResponse[i].description })
                .bindPopup(`<div id="popupimg${ajaxResponse[i].ID}" class="popupImg"></div><h4>${ajaxResponse[i].name}</h4><h6>${ajaxResponse[i].type}</h6><span>${ajaxResponse[i].location}</span><br>${ajaxResponse[i].description}<form class="popupHiddenForm"><input hidden id="pointID" name="pointID" value="${ajaxResponse[i].ID}"><button onclick="deleteThisPoint('${ajaxResponse[i].ID}','marker${i}','<%=checkUser%>','<%=checkAdmin%>')" type="button" ><img src="/img/deletemark.png" class="popupImgs" alt="Remove Mark"></button></button>
                    <button style="border:none;background-color:transparent" type="button" onclick="openAddMarkModal2(${ajaxResponse[i].ID},<%=checkUser%>,<%=checkAdmin%>)">
                        <img src="./img/<% if(checkAdmin == "1"){%>manageAcc<%}else{%>booknow<%}%>.png" alt="Get Directions" id="directionIcon" style="width:45px; height:45px;background-color:transparent;">
                    </button>
                        <button style="border:none;background-color:transparent" type="button" onclick="addImgModal(${ajaxResponse[i].ID},<%=checkUser%>)"><img src="./img/addimg.png" alt="Add img" id="directionIcon" style="width:45px; height:45px;background-color:transparent;"></button><button style="border:none;background-color:transparent" type="button" onclick="addWP2(${ajaxResponse[i].latitude},${ajaxResponse[i].longitude})"><img src="./img/direction.png" alt="Get Directions" id="directionIcon" style="width:45px; height:45px;background-color:transparent;"></button></form>`)
                .on("click", function () { getHotelPics(ajaxResponse[i].ID, "popupimg" + ajaxResponse[i].ID, `<%=checkAdmin%>`) })
                .addTo(map)
        }


        /*===================================================
                    TILE LAYER               
        ===================================================*/
        L.control.scale({ metric: true, imperial: true, position: 'bottomright' }).addTo(map) // scale

        /*===================================================
                    LAYER CONTROL               
        ===================================================*/

        var baseLayers = {
            "OpenStreetMap": osm
        };

        var overlays = {
            //  "Hotels": hotels,
            //  "B&Bs": bnbs,
            //  "Campsites": campsites,
            //  "Pubs": pubs,
            //  "Others": other,
        };
        /*===================================================
                    BUTTONS            
        ===================================================*/

        L.control.layers(baseLayers, overlays, { position: 'bottomright' }).addTo(map);
        L.control.zoom({ position: 'bottomright' }).addTo(map);


        
        /*===================================================
                                GPS / GEOLOCATION              
        ===================================================*/

        var lc = L.control.locate({
            position: 'bottomright',
            strings: {
                title: "Show me where I am!"
            },
            locateOptions: {
                    maxZoom: 14,
                    enableHighAccuracy: true
            }
        }).addTo(map);

        map.locate()
            .on('locationfound', function(e){
                document.getElementById('start').value = `${e.latitude},${e.longitude}`
            });

        /*===================================================
                    ROUTING CONTROL              
        ===================================================*/
        var wp1 = String(document.getElementById('start').value).split(",")
        var wp2 = String(document.getElementById('destination').value).split(",")
        if (wp2.length > 1) {
            var rout = L.Routing.control({
                "mode": "driving",
                "driving_side": "right",
                waypoints: [
                    wayPoint1 = L.latLng(wp1),
                    wayPoint2 = L.latLng(wp2)
                ],
                show: false,
                units: 'imperial',
                autoRoute: true,
                collapsible: true,
                routeWhileDragging: true,
                lineOptions: { styles: [{ color: 'blue', opacity: 0.7, weight: 5 }] },
                geocoder: L.Control.Geocoder.nominatim({ geocodingQueryParams: { 'limit': '5' }, 'postcode': { dataset: 'DPA,LPI' } }),
                showAlternatives: true,
                altLineOptions: { styles: [{ color: 'grey', opacity: 0.8, weight: 5 }, { color: 'grey', opacity: 0.8, weight: 5 }] }
            }).addTo(map)
            var boundz = L.latLngBounds(wp1, wp2);
            map.fitBounds(boundz)
        }

        /*===================================================
                    MAP ON CLICK POPUP          
        ===================================================*/
        function onMapClick(e) {
            L.popup()
                .setLatLng(e.latlng)
                .setContent("<div class='popupClick'>Location:<br><p contentEditable='true' id='wpz'>" + e.latlng.lat + ", " + e.latlng.lng + "</p>" +
                    `</div><div style="display: flex;justify-content: center;"><button onclick="openAddMarkModal(${e.latlng.lat}, ${e.latlng.lng},'<%=checkAdmin%>')" style="border:none;background-color:transparent;" type="button"><img src="/img/addmark.png" class="popupImgs" alt="Add Mark"></button><button style='border:none;background-color:transparent' type='button' onclick='addWP2(${e.latlng.lat}, ${e.latlng.lng})'><img src="./img/direction.png" alt="Get Directions" id="directionIcon" style="width:45px; height:45px;background-color:transparent;"></button></div>`)
                .openOn(map);
        }
        map.on('click', onMapClick);

    }

</script>
<script defer>initializeMap()</script>
<script>
    $(document).on('click', '.divResults', function () {
        var tempCoords = $(this).attr('data-coords').split(","),
            corner1 = L.latLng(tempCoords[0], tempCoords[1]),
            corner2 = L.latLng(tempCoords[0], tempCoords[1]),
            bounds = L.latLngBounds(corner1, corner2);

        map.flyToBounds(bounds, { setView: true, maxZoom: 14, duration: 0.5 });
    });</script>

    