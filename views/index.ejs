<script src="https://unpkg.com/leaflet-control-geocoder/dist/Control.Geocoder.js"></script>
<%- include ('./partials/popup') %>
<%- include ('./partials/popup2') %>
<%- include('./partials/header') %>

    

<div class="mainProfileDiv"></div>
<div id="map" style="position:absolute;height:80vh; width: 90vw;bottom:5%;"></div>

<input hidden type="text" name="start" class="input" id="start" placeholder="Choose starting point" />
<input hidden type="text" name="end" class="input" id="destination" placeholder="Choose starting point" />




<script type="text/javascript" defer>

/*===================================================
                 ROUTING           
 ===================================================*/
 function getLocation() {
     if (navigator.geolocation) {
         navigator.geolocation.getCurrentPosition(showPosition);
     } else {
         console.log("Geolocation is not supported by this browser.")
     }
 }
 function showPosition(position) {
     document.getElementById('start').value = [position.coords.latitude, position.coords.longitude]
 }
 getLocation()

 /*===================================================
                 MAP INIT               
 ===================================================*/
 var map = L.map('map')

 initializeMap()
 function addWP1(param1, param2) { // waypoint1

     document.getElementById('start').value = [param1, param2]
     var imgz = document.getElementsByTagName('img')
     for (i = 0; i < document.getElementsByTagName('img').length; i++) {
         if (imgz[i].alt == "fromHere") { imgz[i].remove() }
     }
     var fromHere = L.marker([param1, param2], { icon: startIcon, alt: "fromHere" }).addTo(map).bindPopup("from location").openPopup();

 }

 function addWP2(param1, param2) {// waypoint2

     document.getElementById('destination').value = [param1, param2]
     var imgz = document.getElementsByTagName('img')
     for (i = 0; i < document.getElementsByTagName('img').length; i++) {
         if (imgz[i].alt == "toHere") { imgz[i].remove() }
     }
     var toHere = L.marker([param1, param2]).addTo(map).bindPopup("to location").openPopup();
     initializeMap()
 }
 function resolveAfterMSeconds(time) { // delayer
     return new Promise(resolve => {
         setTimeout(() => {
             resolve('resolved');
         }, time);
     });
 }
    

 async function initializeMap() {

     map.remove()
     await resolveAfterMSeconds(444)
     console.log("loading...");
     map = L.map('map')
     map.on('locationerror', onLocationError);
     map.on('locationfound', onLocationFound);

     /*===================================================
                 OSM TILE LAYER             
     ===================================================*/
     var osm = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
         attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
     });
     osm.addTo(map);
     

 /*===================================================
                 ICONS               
 ===================================================*/
     var baseIcon = L.Icon.extend({
             options: {
                 iconUrl: "./img/icon1.png", iconSize: [35, 35], iconAnchor: [5, 5], popupAnchor: [5, -5]
             }
         })

     var starIcon = new baseIcon({ iconUrl: "./img/star.png" })
     var homeIcon = new baseIcon({ iconUrl: "./img/home.png" })
     var workIcon = new baseIcon({ iconUrl: "./img/work.png" })
     var parkingIcon = new baseIcon({ iconUrl: "./img/parking.png" })
     var iconParking = new baseIcon({ iconUrl: "./img/parking.png" })
     
     var iconHotel = new baseIcon({ iconUrl: "./img/hotel.png" })
     var iconHostel = new baseIcon({ iconUrl: "./img/hostel.png" })
     var iconBnB = new baseIcon({ iconUrl: "./img/bnb.png" })
     var iconRBnB = new baseIcon({ iconUrl: "./img/rbnb.png" })
     
 /*===================================================
                 BUILDING MARKS              
 ===================================================*/
     // looping through the points from the database to dynamically add the points 
     // each time the map is called
     
     <% for (let c = 0; c < points.length; c++) { %>
            marker<%=c%> = L.marker([<%=points[c].latitude%>,<%=points[c].longitude%>],{ <%if(String(points[c].icon).length > 4){%>icon: <%=points[c].icon%>,<%}%> alt: 'marker<%=c%>', <%if(String(points[c].description).length > 4){%>description:'<%=points[c].description%>'<%}%> } )
            .bindPopup('<%if(String(points[c].photo).length > 4){%><img class="popupImg" src="<%=points[c].photo%>"><%}%><h4><%=points[c].name%></h4><h6><%=points[c].type%></h6><span><%=points[c].location%></span><br><%if(String(points[c].description).length > 0){%><%=points[c].description%><%}%><form class="popupHiddenForm"><input hidden id="pointID" name="pointID" value="<%=points[c].ID%>"><button onclick="deleteThisPoint(`<%=points[c].ID%>`,`marker<%=c%>`)" type="button" ><img src="/img/deletemark.png" class="popupImgs" alt="Remove Mark"></button></button><button style="border:none;background-color:transparent" type="button" onclick="addWP2(<%=points[c].latitude%>,<%=points[c].longitude%>)"><img src="./img/direction.png" alt="Get Directions" id="directionIcon" style="width:45px; height:45px;background-color:transparent;"></button><button style="border:none;background-color:transparent" type="button" onclick="openAddMarkModal2(<%=points[c].ID%>)"><img src="./img/booknow.png" alt="Get Directions" id="directionIcon" style="width:45px; height:45px;background-color:transparent;"></button></form>').openPopup()
     <% } %>
                   
     /*===================================================
                             GROUP LAYER           
     ===================================================*/
     <%countz=1%>
    var hotels = L.layerGroup([
    <% if(typeof points != "undefined") { %>
        <% for (let c = 0; c < points.length; c++) { %>
            <% if(points[c].type == "Hotel"){ %>
            marker<%=c%>,
            <%countz++%>
            <%}%>
    <% } %> <%}%>
    ]).addTo(map)
    
    var bnbs = L.layerGroup([
    <% if(typeof points != "undefined") { %>
        <% for (let c = 0; c < points.length; c++) { %>
            <% if(points[c].type == "BnB"){ %>
            marker<%=c%>,
            <%countz++%>
            <%}%>
    <% } %> <%}%>
    ]).addTo(map)
    
    var rbnbs = L.layerGroup([
    <% if(typeof points != "undefined") { %>
        <% for (let c = 0; c < points.length; c++) { %>
            <% if(points[c].type == "RBnB"){ %>
            marker<%=c%>,
            <%countz++%>
            <%}%>
    <% } %> <%}%>
    ]).addTo(map)

    var hostels = L.layerGroup([
    <% if(typeof points != "undefined") { %>
        <% for (let c = 0; c < points.length; c++) { %>
            <% if(points[c].type == "Hostel"){ %>
            marker<%=c%>,
            <%countz++%>
            <%}%>
    <% } %> <%}%>
    ]).addTo(map)

    var other = L.layerGroup([
    <% if(typeof points != "undefined") { %>
        <% for (let c = 0; c < points.length; c++) { %>
            <% if(points[c].type != "Hotel" && points[c].type != "Hostel" && points[c].type != "RBnB" && points[c].type != "BnB" ){ %>
            marker<%=c%>,
            <%countz++%>
            <%}%>
    <% } %> <%}%>
    ]).addTo(map)
    
     /*===================================================
                             GPS / GEOLOCATION              
     ===================================================*/
     map.locate({ setView: true, maxZoom: 19 });
     function onLocationFound(e) {
         var radius = e.accuracy;
         var gps1 = L.marker(e.latlng).addTo(map).bindPopup("You are within " + radius + "<br>at " + e.latlng);
         var gps2 = L.circle(e.latlng, radius).addTo(map);
     }
     function onLocationError(e) {
         alert(e.message);
     }
     map.on('locationerror', onLocationError);
     map.on('locationfound', onLocationFound);

     /*===================================================
                 TILE LAYER               
     ===================================================*/
     L.control.scale({ metric: true, imperial: false, position: 'bottomleft' }).addTo(map) // scale

     googleStreets = L.tileLayer('http://{s}.google.com/vt/lyrs=m&x={x}&y={y}&z={z}', {
         maxZoom: 19,
         subdomains: ['mt0', 'mt1', 'mt2', 'mt3'],
         attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
     });
     googleStreets.addTo(map);

     // Satelite Layer
     googleSat = L.tileLayer('http://{s}.google.com/vt/lyrs=s&x={x}&y={y}&z={z}', {
         maxZoom: 19,
         subdomains: ['mt0', 'mt1', 'mt2', 'mt3'],
         attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
     });
     googleSat.addTo(map);

     googleTraffic = L.tileLayer('http://{s}.google.com/vt/lyrs=m@221097413,traffic&x={x}&y={y}&z={z}', {
         maxZoom: 19,
         subdomains: ['mt0', 'mt1', 'mt2', 'mt3'],
         attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
     });
     googleTraffic.addTo(map);

     /*===================================================
                 LAYER CONTROL               
     ===================================================*/

     var baseLayers = {
         "Satellite": googleSat,
         "GoogleMap": googleStreets,
         "OpenStreetMap": osm,
         "Traffic": googleTraffic,
     };

     var overlays = {
         "Hotels": hotels,
         "B&B": bnbs,
         "AirBnB": rbnbs,
         "Hostels": hostels,
         "Others": other,
     };
     /*===================================================
                 LAYER BUTTON            
     ===================================================*/

     var layerz = L.control.layers(baseLayers, overlays, { position: 'bottomright' }).addTo(map);

      /*===================================================
                 ROUTING CONTROL              
     ===================================================*/
     var wp1 = String(document.getElementById('start').value).split(",")
     var wp2 = String(document.getElementById('destination').value).split(",")
     if (wp2.length > 1) {
         var rout = L.Routing.control({
             "mode": "driving",
             "driving_side": "right",
             waypoints: [
                 wayPoint1 = L.latLng(wp1),
                 wayPoint2 = L.latLng(wp2)
             ],
             show: true,
             units: 'imperial',
             autoRoute: true,
             collapsible: true,
             routeWhileDragging: true,
             lineOptions: { styles: [{ color: 'blue', opacity: 0.7, weight: 5 }] },
             geocoder: L.Control.Geocoder.nominatim({ geocodingQueryParams: { 'limit': '5' }, 'postcode': { dataset: 'DPA,LPI' } }),
             showAlternatives: true,
             altLineOptions: { styles: [{ color: 'grey', opacity: 0.8, weight: 5 }, { color: 'grey', opacity: 0.8, weight: 5 }] }
         }).addTo(map)
     } else {
         var rout = L.Routing.control({
             "mode": "driving",
             "driving_side": "right",
             waypoints: [
                 wayPoint1 = L.latLng(wp1)
             ],
             show: true,
             units: 'imperial',
             autoRoute: true,
             collapsible: true,
             routeWhileDragging: true,
             lineOptions: { styles: [{ color: 'blue', opacity: 0.7, weight: 5 }] },
             geocoder: L.Control.Geocoder.nominatim({ geocodingQueryParams: { 'limit': '5' }, 'postcode': { dataset: 'DPA,LPI' } }),
             showAlternatives: true,
             altLineOptions: { styles: [{ color: 'grey', opacity: 0.8, weight: 5 }, { color: 'grey', opacity: 0.8, weight: 5 }] }
         }).addTo(map)
     }
     var boundz = L.latLngBounds(wp1, wp2);
     map.fitBounds(boundz)

      /*===================================================
                 MAP ON CLICK POPUP          
     ===================================================*/
     function onMapClick(e) {
         L.popup()
             .setLatLng(e.latlng)
             .setContent("<div class='popupClick'>Location:<br><p contentEditable='true' id='wpz'>" + e.latlng.lat +", "+  e.latlng.lng + "</p>" +
                 `</div>
                 <div style="display: flex;justify-content: center;"><button onclick="openAddMarkModal(${e.latlng.lat}, ${e.latlng.lng})" style="border:none;background-color:transparent;" type="button"><img src="/img/addmark.png" class="popupImgs" alt="Add Mark"></button><button style='border:none;background-color:transparent' type='button' onclick='addWP2(${e.latlng.lat}, ${e.latlng.lng})'><img src="./img/direction.png" alt="Get Directions" id="directionIcon" style="width:45px; height:45px;background-color:transparent;"></button></div>`)
             .openOn(map);
     }
     map.on('click', onMapClick);
    }
 
</script>
